<section class="" id="productSection">
  <div class="custom-container">
    {% assign sort_by = request.parameters.sort_by | default: 'manual' %}
      <div class="d-flex align-items-center justify-content-between">
      <div class="col-sm-4 col-0"></div>
      {% comment %} <h2 class="text-sm-center test text-start col-sm-4 col-6">All products</h2> {% endcomment %}
      <div class="col-sm-4 col-6 text-end">
        <!-- Sort selector removed as requested -->
      </div>
    </div>
    {% paginate collections.all.products by 12 %}

      <div class="row pt-sm-5 pt-3">
        {% for product in collections.all.products %}
          <div class="col-lg-3 col-md-4 col-sm-6 col-6 pt-3">
            <div class="product-container">
              <a href="{{ product.url }}">
                <div class="prod-image">
                  <img
                    loading="lazy"
                    src="{{ product.featured_image | image_url }}"
                    width="250"
                    height="225"
                    alt="{{ product.title }}" />
                  {% unless product.available %}
                    <span class="out-of-stock-badge">{{ 'products.product.out_of_stock' | t }}</span>
                  {% endunless %}
                  {% if product.compare_at_price > product.price %}
                    <span class="sale-badge">{{ 'products.product.sale_badge' | t }}</span>
                  {% endif %}
                </div>
              </a>
              <div class="prod-info">
                <p id="title">
                  <a href="{{ product.url }}">{{ product.title }}</a>
                </p>
                <div class="d-flex flex-sm-row flex-column align-items-md-center align-items-start justify-content-between">
                  <div>
                    <div class="d-flex align-items-center">
                      <h3 class="fw-bold" id="price">{{ product.price | money }}
                        {% assign pieces_per_pack = product.metafields.custom.pieces_per_pack | default: 1 %}
                      </h3>
                      {% if product.compare_at_price > product.price %}
                        <p class="card-compare-price ms-2">{{ product.compare_at_price | money }}</p>
                      {% endif %}
                    </div>
                    {% if pieces_per_pack > 1 %}
                      {% case product.type %}
                        {% when 'Roll' %}
                          {% assign unit_label = 'roll' %}
                        {% when 'Sheet' %}
                          {% assign unit_label = 'sheet' %}
                        {% when 'Bundle' %}
                          {% assign unit_label = 'bundle' %}
                        {% else %}
                          {% assign unit_label = product.type %}
                    {% endcase %}
                      {% comment %} Original line: <p class="perPiece pb-2">({{ product.price | divided_by: pieces_per_pack | money }}) per {{ unit_label }}</p> {% endcomment %}

                      {% comment %} Calculate precise price per piece in cents (e.g., 1220 cents for $12.20) {% endcomment %}
                      {% assign precise_per_piece_cents = product.price | times: 1.0 | divided_by: pieces_per_pack %}

                        {% if precise_per_piece_cents > 0 and precise_per_piece_cents < 1.0 %}
                        {% comment %} 
                                                                                                                                                            Price per piece is a positive fraction of a cent (e.g., 0.01 to 0.99 cents).
                                                                                                                                                            Display with higher precision. For example, 0.61 cents should become $0.0061. 
                                                                                                                                                {% endcomment %}

                        {% comment %} Convert fractional cents to the main currency unit (e.g., dollars) {% endcomment %}
                        {% assign value_in_main_currency = precise_per_piece_cents | divided_by: 100.0 %}

                      {% assign precision_for_fractions = 4 %}
                        {% comment %} Adjust if more/less precision is desired, e.g. 0.0061 needs 4 {% endcomment %}
                      {% assign formatted_high_precision_value = value_in_main_currency | round: precision_for_fractions %}

                        {% comment %} 
                                                                                                                                                            Create the display string with currency symbol using a placeholder method.
                                                                                                                                                            This adapts to your store's currency formatting (e.g., prefix/suffix symbol, decimal/comma separators). 
                                                                                                                                                {% endcomment %}
                        {% assign placeholder_value = "###PRICE###" %}
                      {% assign dummy_amount_in_cents_for_format = 123 %}
                        {% comment %} Represents $1.23, €1,23, ¥123 etc. {% endcomment %}
                      {% assign formatted_dummy_price = dummy_amount_in_cents_for_format | money %}

                        {% comment %} 
                                                                                                                                                            Prepare known numeric string representations of the dummy price.
                                                                                                                                                            This helps in replacing the numeric part of the formatted_dummy_price.
                                                                                                                                                            Example: "$1.23" (num_dummy_val_dot), "1,23 €" (num_dummy_val_comma), "¥123" (num_dummy_val_int) 
                                                                                                                                                {% endcomment %}
                        {% assign num_dummy_val_dot = "1.23" %}
                        {% assign num_dummy_val_comma = "1,23" %}
                      {% assign num_dummy_val_int = "123" %}

                        {% comment %} Create a template by replacing the numeric part of the dummy formatted price with the placeholder {% endcomment %}
                        {% assign money_template = formatted_dummy_price | replace: num_dummy_val_dot, placeholder_value %}
                        {% assign money_template = money_template | replace: num_dummy_val_comma, placeholder_value %}
                      {% assign money_template = money_template | replace: num_dummy_val_int, placeholder_value %}

                        {% comment %} Insert the actual high-precision formatted value into the template {% endcomment %}
                        {% assign final_display_string = money_template | replace: placeholder_value, formatted_high_precision_value %}

                        {% comment %} Fallback: If the placeholder logic didn't work (e.g. very unusual money format not caught by 1.23/1,23/123) {% endcomment %}
                        {% unless money_template contains placeholder_value %}
                          {% comment %} This means the placeholder was not successfully introduced into money_template.
                                                                                                                                                                                        Default to prepending the shop currency symbol.
                                                                                                                                                                {% endcomment %}
                          {% assign currency_symbol = shop.currency | default: "$" %}
                          {% assign final_display_string = currency_symbol | append: " " | append: formatted_high_precision_value %}
                        {% endunless %}
                        {% assign display_value = final_display_string %}
                      {% else %}
                        {% comment %} 
                                                                                                                                                            Price per piece is 0, or 1 cent or more.
                                                                                                                                                            Use standard 'money' filter. Input should be cents, rounded to the nearest whole number. 
                                                                                                                                                {% endcomment %}
                        {% assign cents_for_standard_filter = precise_per_piece_cents | round %}
                        {% assign display_value = cents_for_standard_filter | money %}
                      {% endif %}

                      <p class="perPiece pb-2">({{ display_value }}) per {{ unit_label }}</p>
                    {% endif %}
                  </div>
                  <form class="add-to-cart-form prod-card" data-variant-id="{{ product.variants.first.id }}">
                    <button
                      type="submit"
                      class="funnel-font fw-bold d-sm-block d-none"
                      {% unless product.available %}
                      disabled{% endunless %}
                      aria-label="{% if product.available %}Add {{ product.title }} to cart{% else %}Out of Stock{% endif %}">
                      {% if product.available %}
                        + {{ 'products.product.add_to_cart' | t }}
                      {% else %}
                        {{ 'products.product.out_of_stock' | t }}
                      {% endif %}
                    </button>
                  </form>
                </div>
              </div>
            </div>
          </div>
        {% endfor %}
      </div>
      <div class="col-12 d-flex justify-content-center">
        <div class="paginationContainer pt-md-5 pt-3">
          <div class="custom-pagination">
            {% if paginate.previous %}
              <a
                href="{{ paginate.previous.url }}"
                class="prev"
                aria-label="Previous"><img
                  src="{{'left-arrow.svg' |  asset_url}}"
                  width="20"
                  height="20"
                  alt=""></a>
            {% endif %}

            {% for part in paginate.parts %}
              {% if part.is_link %}
                <a href="{{ part.url }}">{{ part.title }}</a>
              {% else %}
                <span class="current">{{ part.title }}</span>
              {% endif %}
            {% endfor %}

            {% if paginate.next %}
              <a
                href="{{ paginate.next.url }}"
                class="next"
                aria-label="Next"><img
                  src="{{'right-arrow.svg' |  asset_url}}"
                  width="20"
                  height="20"
                  alt="Next Page"></a>
            {% endif %}
          </div>
        </div>
      </div>
    {% endpaginate %}
  </div>
</section>

<style>
/* Removed sort-selector styles as requested */</style><script>
  document.addEventListener('DOMContentLoaded', function() {
    const sortSelector = document.getElementById('sort-selector');
    if (sortSelector) {
      sortSelector.addEventListener('change', function() {
        const url = new URL(window.location.href);
        url.searchParams.set('sort_by', this.value);
        window.location.href = url.toString();
      });
    }
  });
</script>